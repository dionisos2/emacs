;; php.srt --- 
;;
;; Copyright (C) 2010 dionisos
;;
;; Author: dionisos <dionisos@karn>
;;
;; This program is free software; you can redistribute it and/or
;; modify it under the terms of the GNU General Public License as
;; published by the Free Software Foundation; either version 2, or (at
;; your option) any later version.

;; This program is distributed in the hope that it will be useful, but
;; WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this program; see the file COPYING.  If not, write to
;; the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
;; Boston, MA 02110-1301, USA.

set mode "php-mode"
set escape_start "{{"
set escape_end "}}"

context code 

template foreach :indent
----
foreach ({{?ITERABLE}} as {{?ELEMENT}})
{
{{^}}

}

----


template incomplete :indent
----
		$this->markTestIncomplete("{{^}}");

----

template for :indent
----
for({{?INIT}};{{?COND}};{{?INC}})
{
{{^}}

}

----

template if :indent
----
if({{?COND}})
{
{{^}}

}

----

template ifel :indent
----
if({{?COND}})
{
{{^}}

}
else
{
}

----

template function :indent
----

 /**
 * {{?INFO}}
 * @param
 * @return
 */
void {{?NAME}}({{^}});

----


context declaration

template t :indent
----
$this->{{^}}
----


template br :indent
----
<br/>
----

template printbr :indent
----
print "<br/>";
----

template require_once :indent
"require_once"
----
require_once '{{^}}';

----

template class :indent
----
class {{?CLASS_NAME}}
{

  public function __construct() 
  {
    parent::__construct();
  }
	{{^}}

}

----

template test_class :indent
----
class {{?CLASS_NAME}}Test extends PHPUnit_Framework_TestCase
{
    protected function setUp()
		{
		{{^}}

		}

		protected function assertPreConditions()
		{
				$this->markTestIncomplete("do nothing");
		}

}
----

context classdecl



template foreach :indent
----
foreach ({{?ITERABLE}} as {{?ELEMENT}})
{
{{^}}

}

----

template magic_construct :indent
----
public function __construct() 
{
  parent::__construct();
	{{^}}

}

----

template magic_destruct :indent
----
public function __destruct() 
{
  parent::__destruct();
	{{^}}

}
----

template magic_tostring :indent
----
    public function __toString()
    {
        return $this->foo;
				{{^}}
    }

----

template magic_clone :indent
----

  public function __clone() 
	{
	{{^}}

  }
----

template t :indent
----
$this->{{^}}
----

template incomplete :indent
----
$this->markTestIncomplete("{{^}}");
----

prompt TYPE_PUBLIC "public?" default "public" read y-or-n-p
template methode :indent
----

{{?TYPE}} function {{?NAME}}({{^}})
{

}

----

template annotation :indent
----
				/**
				* @{{^}}
				*/
----

template annotation_exception :indent
----
 /**
 * @expectedException {{?EXCEPTION}}
 */
----

template annotation_depends :indent
----
 /**
 * @depends {{?DEPENDANCE}}
 */
----


template annotation_covers :indent
----
 /**
 * @covers {{?COUVERTURE}}
 */
----


template assert_equals :indent
----
$this->assertEquals({{^}});
----

template assert_true :indent
----
$this->assertTrue({{^}});
----

template assert_arrayhaskey :indent
----
$this->assertArrayHasKey({{^}});
----

template assert_classhasattribute :indent
----
$this->assertClassHasAttribute({{^}});
----

template assert_classhasstaticattribute :indent
----
$this->assertClassHasStaticAttribute({{^}});
----

template assert_contains :indent
----
$this->assertContains({{^}});
----

template assert_containsonly :indent
----
$this->assertContainsOnly({{^}});
----

template assert_count :indent
----
$this->assertCount({{^}});
----

template assert_empty :indent
----
$this->assertEmpty({{^}});
----

;; template assert_equalxmlstructure :indent
;; ----
;; $this->assertEqualXMLStructure({{^}});
;; ----


template assert_false :indent
----
$this->assertFalse({{^}});
----

template assert_fileequals :indent
----
$this->assertFileEquals({{^}});
----

template assert_fileexists :indent
----
$this->assertFileExists({{^}});
----

template assert_greaterthan :indent
----
$this->assertGreaterThan({{^}});
----

template assert_greaterthanorequal :indent
----
$this->assertGreaterThanOrEqual({{^}});
----

template assert_instanceof :indent
----
$this->assertInstanceOf({{^}});
----

template assert_internaltype :indent
----
$this->assertInternalType({{^}});
----

template assert_jsonfileequalsjsonfile :indent
----
$this->assertJsonFileEqualsJsonFile({{^}});
----

template assert_jsonstringequalsjsonfile :indent
----
$this->assertJsonStringEqualsJsonFile({{^}});
----

template assert_jsonstringequalsjsonstring :indent
----
$this->assertJsonStringEqualsJsonString({{^}});
----

template assert_lessthan :indent
----
$this->assertLessThan({{^}});
----

template assert_lessthanorequal :indent
----
$this->assertLessThanOrEqual({{^}});
----

template assert_null :indent
----
$this->assertNull({{^}});
----

template assert_objecthasattribute :indent
----
$this->assertObjectHasAttribute({{^}});
----

template assert_regexp :indent
----
$this->assertRegExp({{^}});
----

template assert_stringmatchesformat :indent
----
$this->assertStringMatchesFormat({{^}});
----

template assert_stringmatchesformatfile :indent
----
$this->assertStringMatchesFormatFile({{^}});
----

template assert_same :indent
----
$this->assertSame({{^}});
----

template assert_selectcount :indent
----
$this->assertSelectCount({{^}});
----

template assert_selectequals :indent
----
$this->assertSelectEquals({{^}});
----

template assert_selectregexp :indent
----
$this->assertSelectRegExp({{^}});
----

template assert_stringendswith :indent
----
$this->assertStringEndsWith({{^}});
----

template assert_stringequalsfile :indent
----
$this->assertStringEqualsFile({{^}});
----

template assert_stringstartswith :indent
----
$this->assertStringStartsWith({{^}});
----

template assert_tag :indent
----
$this->assertTag({{^}});
----

template assert_that :indent
----
$this->assertThat({{^}});
----

template assert_xmlfileequalsxmlfile :indent
----
$this->assertXmlFileEqualsXmlFile({{^}});
----

template assert_xmlstringequalsxmlfile :indent
----
$this->assertXmlStringEqualsXmlFile({{^}});
----

template assert_xmlstringequalsxmlstring :indent
----
$this->assertXmlStringEqualsXmlString({{^}});
----
